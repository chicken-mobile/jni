(define (join-class-pkg pkg class)
  (symbol-append (string->symbol pkg) '|.| class))

(define (make-import-table imports)
  (let loop ((imports imports)
             (classes '())
             (pkgs    '()))
    (if (null? imports)
      (append classes (list (cons '* pkgs)))
      (let* ((import   (car imports))
             (pkg      (symbol->string (car import)))
             (s-class  (cadr import)))
        (if (eq? s-class '*)
          (loop (cdr imports) classes (cons pkg pkgs))
          (loop (cdr imports) 
                (if (list? s-class)
                  (append (map (lambda (x) (cons x (join-class-pkg pkg x))) s-class) classes)
                  (cons (cons s-class (join-class-pkg pkg s-class)) classes))
                pkgs))))))

(define (find-class/by-pkgs find-class class pkgs)
  (call/cc (lambda (found)
             (fold (lambda (import _)
                     (let* ((class-name   (join-class-pkg import class))
                            (mangled-name (mangle-class-name class-name))
                            (r            (find-class mangled-name)))
                       (if r (found r) #f)))
                   '() pkgs))))

(define (find-class* import-table find-class class)
  (let ((s-class (string->symbol class)))
    (or (find-class class)
        (let ((import (assq s-class import-table)))
          (and import (find-class (mangle-class-name (cdr import)))))
        (let ((pkgs (cdr (assq '* import-table))))
          (and (not (null? pkgs))
               (find-class/by-pkgs find-class s-class pkgs))))))

(define-syntax import-java-ns 
  (er-macro-transformer
    (lambda (x r c)
      (let* ((%let*        (r 'let*))
             (%find-class  (r 'find-class))
             (%find-class* (r 'find-class*))
             (imports      (cadr x))
             (body         (cddr x)))
        `(,%let* ((old-find-class ,%find-class)
                  (import-table   (make-import-table ',imports)))
                 (set! find-class (lambda (c) (,%find-class* import-table old-find-class c)))
                 ,@body
                 (set! find-class old-find-class))))))

