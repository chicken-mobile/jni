(use files srfi-1 make)

(define cross-compiling?
  (feature? 'cross-chicken))

(define (require-envvar var)
  (let ((val (get-environment-variable var)))
    (or val
        (with-output-to-port (current-error-port)
          (lambda ()
            (printf "\n\n=== Please, set the ~a environment variable. ===\n\n" var)))
        (exit 1))))

(define java-path
  (require-envvar "JAVA_HOME"))

(define (choose-libjvm-path . jvm-paths)
  (let ((candidates
         (map (lambda (jvm-path)
                (make-pathname java-path jvm-path))
              jvm-paths)))
    (or (find file-exists? candidates)
        (error 'jni "could not find libjvm" candidates))))

(define libjvm-path
  (if (or (and cross-compiling? (host-extension))
          (not (host-extension)))
      (cond-expand
       (x86-64
        (choose-libjvm-path
         "/jre/lib/amd64/server"
         "/jre/lib/x64/server"
         "/jre/lib/amd64/client"
         "/jre/lib/x64/client"))
       (x86
        (choose-libjvm-path
         "/jre/lib/i386/server"
         "/jre/lib/i386/client")))
      ;; TBD
      #f))

(define java-include-path
  (make-pathname java-path "include"))

(define java-platform-include-path
  ;; TODO: (software-version) is not quite the right thing here but
  ;; works for linux at least. Needs investigation for other
  ;; platforms.
  (let ((platform (symbol->string (software-version))))
    (make-pathname java-path (make-pathname "include" platform))))

(define compile-options
  (list "-ljvm"
        (string-append "-L" libjvm-path)
        (string-append "-Wl,-rpath=" libjvm-path)
        (string-append "-C -I" java-include-path)
        (string-append "-C -I" java-platform-include-path)))

(define (compile-jni-module mod)
  (compile ,@compile-options -s ,(make-pathname #f mod "scm") -J)
  (compile ,@compile-options -s ,(make-pathname #f mod "import.scm")))

(make (("jni-lolevel.so" ("jvalue-tools.c"
                          "jni-adapter.h"
                          "jni-lolevel.scm")
	(compile-jni-module "jni-lolevel"))

       ("jni-signatures.so" ("jni-signatures.scm")
        (compile-jni-module "jni-signatures"))

       ;; ("jni-callbacks.so" ("jni-lolevel.so"
       ;;                      "jni-callbacks.scm")
       ;;  (compile-jni-module "jni-callbacks"))
       
       ("jni-types.so" ("jni-lolevel.so"
                        "jni-signatures.so"
                        "jni-types.scm")
        (compile-jni-module "jni-types"))
       
       ("jni-jvalues.so" ("jni-lolevel.so"
                          "jni-jvalues.scm")
        (compile-jni-module "jni-jvalues"))
       
       ("jni-array.so" ("jni-lolevel.so"
                        "jni-array.scm")
        (compile-jni-module "jni-array"))
       
       ("jni-field-id.so" ("jni-lolevel.so"
                           "jni-signatures.so"
                           "jni-field-id.scm")
        (compile-jni-module "jni-field-id"))
       
       ("jni-method-id.so" ("jni-lolevel.so"
                            "jni-types.so"
                            "jni-signatures.so"
                            "jni-method-id.scm")
        (compile-jni-module "jni-method-id"))
       
       ("jni-jlambda-field.so" ("jni-lolevel.so"
                                "jni-field-id.so"
                                "jni-jlambda-field.scm")
        (compile-jni-module "jni-jlambda-field"))
       
       ("jni-jlambda-method.so" ("jni-lolevel.so"
                                 "jni-types.so"
                                 "jni-jvalues.so"
                                 "jni-method-id.so"
                                 "jni-jvalues.so"
                                 "jni-signatures.so"
                                 "jni-jlambda-method.scm")
        (compile-jni-module "jni-jlambda-method"))
       
       ("jni-jlambda-methods-selection.so" ("jni-lolevel.so"
                                            "jni-types.so"
                                            "jni-jlambda-field.so"
                                            "jni-jlambda-methods-selection.scm")
        (compile-jni-module "jni-jlambda-methods-selection"))
       
       ("jni-jlambda-methods.so" ("jni-lolevel.so"
                                  "jni-jlambda-method.so"
                                  "jni-jlambda-methods-selection.so"
                                  "jni-jlambda-methods.scm")
        (compile-jni-module "jni-jlambda-methods"))
       
       ("jni-reflection.so" ("jni-lolevel.so"
                             "jni-types.so"
                             "jni-array.so"
                             "jni-jlambda-methods.so"
                             "jni-reflection.scm")
        (compile-jni-module "jni-reflection"))
       
       ("jni-jimport.so" ("jni-lolevel.so"
                          "jni-types.so"
                          "jni-array.so"
                          "jni-reflection.so"
                          "jni-jlambda-methods.so"
                          "jni-jimport.scm")
        (compile-jni-module "jni-jimport"))
       
       ;; ("jni-jlambda.so" ("jni-lolevel.so"
       ;;                    "jni-signatures.so"
       ;;                    "jni-types.so"
       ;;                    "jni-array.so"
       ;;                    "jni-jlambda-methods.so"
       ;;                    "jni-reflection.so"
       ;;                    "jni-jlambda.scm")
       ;;  (compile-jni-module "jni-jlambda"))
       
       ("jni.so" ("jni-lolevel.so"
                  "jni-types.so"
                  "jni-jlambda-methods.so"
                  "jni-reflection.so"
                  "jni.scm")
        (compile-jni-module "jni")))
  '("jni-lolevel.so"
    "jni-signatures.so"
    ;; "jni-callbacks.so"
    "jni-types.so"
    "jni-jvalues.so"
    "jni-array.so"
    "jni-field-id.so"
    "jni-method-id.so"
    "jni-jlambda-field.so"
    "jni-jlambda-method.so"
    "jni-jlambda-methods-selection.so"
    "jni-jlambda-methods.so"
    "jni-reflection.so"
    "jni-jimport.so"
    ;; "jni-jlambda.so"
    "jni.so"))

(install-extension
 'jni
 '("jni-lolevel.so" "jni-lolevel.import.so"

   "jni-signatures.so"  "jni-signatures.import.so"
   ;; "jni-callbacks.so" "jni-callbacks.import.so"
   "jni-types.so" "jni-types.import.so"
   "jni-jvalues.so" "jni-jvalues.import.so"
   "jni-array.so"  "jni-array.import.so"

   "jni-field-id.so"  "jni-field-id.import.so"
   "jni-method-id.so"  "jni-method-id.import.so"

   "jni-jlambda-field.so" "jni-jlambda-field.import.so"
   "jni-jlambda-method.so" "jni-jlambda-method.import.so"
   "jni-jlambda-methods-selection.so" "jni-jlambda-methods-selection.import.so"
   "jni-jlambda-methods.so" "jni-jlambda-methods.import.so"

   "jni-reflection.so" "jni-reflection.import.so"
   "jni-jimport.so" "jni-jimport.import.so"
   ;; "jni-jlambda.so" "jni-jlambda.import.so"

   "jni.so" "jni.import.so")
 '((version "0.3.0")))
